# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1

jobs:
  build:
    docker:
      - image: circleci/clojure:tools-deps-node

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          name: Restore cljs dependency cache
          keys:
            - 'cljs-{{ checksum "shadow-cljs.edn" }}'
            - 'cljs'
      - restore_cache:
          name: Restore node dependency cache
          keys:
            - 'node-{{ checksum "yarn.lock" }}'
            - 'node'

      - run:
          name: Install node dependencies
          command: yarn install

      - run:
          name: Build project
          command: yarn build

      - save_cache:
          name: Save cljs dependency cache
          paths:
            - ~/.m2
          key: 'cljs-{{ checksum "shadow-cljs.edn" }}'

      - save_cache:
          name: Save node dependency cache
          paths:
            - ~/.cache/yarn
            - ~/repo/node_modules
          key: 'node-{{ checksum "yarn.lock" }}'

      - store_artifacts:
          path: ~/repo/out/main.js

      - persist_to_workspace:
          root: ~/
          paths:
            - repo/out

  test:
    docker:
      - image: circleci/clojure:tools-deps-node

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          name: Restore cljs dependency cache
          keys:
            - 'cljs-{{ checksum "shadow-cljs.edn" }}'
            - 'cljs'
      - restore_cache:
          name: Restore node dependency cache
          keys:
            - 'node-{{ checksum "yarn.lock" }}'
            - 'node'

      - run:
          name: Install node dependencies
          command: yarn install

      - run:
          name: Run tests
          command: yarn test

      - store_artifacts:
          path: ~/repo/out/node-tests.js

  publish-github-release:
    docker:
      - image: circleci/node:latest
    working_directory: ~/
    steps:
      - attach_workspace:
          at: ~/repo/out
      - run:
          name: "Debug"
          command: |
            cd repo/out
            ls -la
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(node main.js --version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/

workflows:
  build:
    jobs:
      - build
      - test
      - publish-github-release:
          requires:
            - test
            - build
      # - publish-to-npm:
      #     requires:
      #       - test
      #       - build
